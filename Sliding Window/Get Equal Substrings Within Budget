class Solution {
public:
    int equalSubstring(string s, string t, int maxCost) {

        int n = s.size();
        
        vector <int> v (n);

        for (int i=0; i<n; i++){
            v[i] = abs (s[i]-t[i]);
        }

        int maxlen  = 0;

        int i=0;
        int j=0;

        int sum = 0;

        while(j<n){

            while(j<n && sum <= maxCost){
                sum += v[j];
                j++;
            }

            maxlen = max(maxlen, j-i-1);

            cout<<maxlen<<endl;


            while(i<j && sum > maxCost){
                sum -= v[i];
                i++;
            }
        }

        maxlen = max(maxlen, j-i);

        return maxlen;
    }
};

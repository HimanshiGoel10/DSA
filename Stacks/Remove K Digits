class Solution {
public:
    string removeKdigits(string num, int k) {
        
        stack <char> st;

        for(int i=0; i<num.size(); i++){

            while(!st.empty() && st.top()-'0' > num[i]-'0' && k>0){
                st.pop();
                k--;
            }

            st.push(num[i]);
        }

        string ans;

        // if k is still greater than 0, we will try removing the max digit present in num
        // but the numbers are already in increasing order, so we can pop from end

        while(!st.empty() && k>0){
            st.pop();
            k--;
        }

        while(!st.empty()){
            ans += st.top();
            st.pop();
        }

        while(!ans.empty() && ans.back()=='0'){
            ans.pop_back();
        }

        reverse(begin(ans), end(ans));

        if(ans.empty()) return "0";

        return ans;
    }
};
